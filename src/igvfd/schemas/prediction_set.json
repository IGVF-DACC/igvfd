{
    "title": "Prediction Set",
    "description": "A file set of computational predictions. Prediction sets contain results of analyses to predict functions or traits of genomic features.",
    "$id": "/profiles/prediction_set.json",
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "type": "object",
    "oneOf": [
        {
            "required": [
                "lab",
                "award",
                "file_set_type",
                "samples"
            ]
        },
        {
            "required": [
                "lab",
                "award",
                "file_set_type",
                "donors"
            ]
        }
    ],
    "identifyingProperties": [
        "uuid",
        "accession",
        "alternate_accessions",
        "aliases"
    ],
    "additionalProperties": false,
    "mixinProperties": [
        {
            "$ref": "file_set.json#/properties"
        },
        {
            "$ref": "mixins.json#/basic_item"
        },
        {
            "$ref": "mixins.json#/url"
        },
        {
            "$ref": "mixins.json#/accession"
        },
        {
            "$ref": "mixins.json#/attribution"
        },
        {
            "$ref": "mixins.json#/documents"
        },
        {
            "$ref": "mixins.json#/publication_identifiers"
        },
        {
            "$ref": "mixins.json#/release_timestamp"
        },
        {
            "$ref": "mixins.json#/genes"
        },
        {
            "$ref": "mixins.json#/loci"
        }
    ],
    "dependentSchemas": {
        "$merge": [
            "file_set.json#/dependentSchemas"
        ],
        "scope": {
            "comment": "If scope is genes then genes, small_scale_gene_list, or large_scale_gene_list is required, if scope is loci then loci, small_scale_loci_list, or large_scale_loci_list are required, if scope is genome-wide then small_scale_gene_list, large_scale_gene_list, loci, small_scale_loci_list, and large_scale_loci_list shouldn't be specified.",
            "oneOf": [
                {
                    "required": [
                        "genes"
                    ],
                    "properties": {
                        "scope": {
                            "enum": [
                                "genes"
                            ]
                        }
                    }
                },
                {
                    "required": [
                        "small_scale_gene_list"
                    ],
                    "properties": {
                        "scope": {
                            "enum": [
                                "genes"
                            ]
                        }
                    }
                },
                {
                    "required": [
                        "large_scale_gene_list"
                    ],
                    "properties": {
                        "scope": {
                            "enum": [
                                "genes"
                            ]
                        }
                    }
                },
                {
                    "required": [
                        "loci"
                    ],
                    "properties": {
                        "scope": {
                            "enum": [
                                "loci"
                            ]
                        }
                    }
                },
                {
                    "required": [
                        "small_scale_loci_list"
                    ],
                    "properties": {
                        "scope": {
                            "enum": [
                                "loci"
                            ]
                        }
                    }
                },
                {
                    "required": [
                        "large_scale_loci_list"
                    ],
                    "properties": {
                        "scope": {
                            "enum": [
                                "loci"
                            ]
                        }
                    }
                },
                {
                    "not": {
                        "required": [
                            "genes",
                            "small_scale_gene_list",
                            "large_scale_gene_list",
                            "loci",
                            "small_scale_loci_list",
                            "large_scale_loci_list"
                        ]
                    },
                    "properties": {
                        "scope": {
                            "enum": [
                                "genome-wide"
                            ]
                        }
                    }
                }
            ]
        },
        "genes": {
            "comment": "Specification of genes requires that scope is genes and is mutually exclusive with specification of small_scale_gene_list and large_scale_gene_list.",
            "allOf": [
                {
                    "properties": {
                        "scope": {
                            "const": "genes"
                        }
                    }
                },
                {
                    "not": {
                        "required": [
                            "small_scale_gene_list",
                            "large_scale_gene_list"
                        ]
                    }
                }
            ]
        },
        "small_scale_gene_list": {
            "comment": "Specification of small_scale_gene_list requires that scope is genes and is mutually exclusive with specification of genes and large_scale_gene_list.",
            "allOf": [
                {
                    "properties": {
                        "scope": {
                            "const": "genes"
                        }
                    }
                },
                {
                    "not": {
                        "required": [
                            "genes",
                            "large_scale_gene_list"
                        ]
                    }
                }
            ]
        },
        "large_scale_gene_list": {
            "comment": "Specification of large_scale_gene_list requires that scope is genes and is mutually exclusive with specification of genes and small_scale_gene_list.",
            "allOf": [
                {
                    "properties": {
                        "scope": {
                            "const": "genes"
                        }
                    }
                },
                {
                    "not": {
                        "required": [
                            "genes",
                            "small_scale_gene_list"
                        ]
                    }
                }
            ]
        },
        "loci": {
            "comment": "Specification of loci requires that scope is loci and is mutually exclusive with specification of small_scale_loci_list and large_scale_loci_list.",
            "allOf": [
                {
                    "properties": {
                        "scope": {
                            "const": "loci"
                        }
                    }
                },
                {
                    "not": {
                        "required": [
                            "small_scale_loci_list",
                            "large_scale_loci_list"
                        ]
                    }
                }
            ]
        },
        "small_scale_loci_list": {
            "comment": "Specification of small_scale_loci_list requires that scope is loci and is mutually exclusive with specification of loci and large_scale_loci_list.",
            "allOf": [
                {
                    "properties": {
                        "scope": {
                            "const": "loci"
                        }
                    }
                },
                {
                    "not": {
                        "required": [
                            "loci",
                            "large_scale_loci_list"
                        ]
                    }
                }
            ]
        },
        "large_scale_loci_list": {
            "comment": "Specification of large_scale_loci_list requires that scope is loci and is mutually exclusive with specification of loci and small_scale_loci_list.",
            "allOf": [
                {
                    "properties": {
                        "scope": {
                            "const": "loci"
                        }
                    }
                },
                {
                    "not": {
                        "required": [
                            "loci",
                            "small_scale_loci_list"
                        ]
                    }
                }
            ]
        }
    },
    "properties": {
        "schema_version": {
            "default": "4"
        },
        "file_set_type": {
            "description": "The category that best describes this prediction set.",
            "comment": "File set type describes the feature being predicted by the results in the prediction set.",
            "enum": [
                "pathogenicity",
                "functional effect",
                "protein stability",
                "activity level"
            ],
            "submissionExample": {
                "appscript": "pathogenicity",
                "igvf_utils": "pathogenicity"
            }
        },
        "scope": {
            "title": "Prediction Scope",
            "description": "The scope or scale that this prediction set is designed to target. If the scope is across gene(s) or loci, these will need to be specified in the genes or loci property.",
            "type": "string",
            "enum": [
                "genes",
                "loci",
                "genome-wide"
            ],
            "submissionExample": {
                "appscript": "genes",
                "igvf_utils": "genes"
            }
        },
        "genes": {
            "title": "Targeted Genes",
            "description": "The specific gene(s) this prediction set was designed to target.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "comment": "See gene.json for a list of available identifiers.",
                "type": "string",
                "linkTo": "Gene"
            },
            "submissionExample": {
                "appscript": "[\"ENSMUSG00000044487\", \"john-doe:gene01\"]",
                "igvf_utils": "ENSMUSG00000044487, john-doe:gene01"
            },
            "permission": "import_items"
        },
        "small_scale_gene_list": {
            "description": "The specific, small scale list of (<=100) gene(s) this prediction set targets.",
            "comment": "If more than 100 genes were targeted, submit large_scale_gene_list instead."
        },
        "large_scale_gene_list": {
            "description": "The large scale list of (>100 genes) this this prediction set targets.",
            "comment": "If 100 or fewer genes were targeted, submit small_scale_gene_list instead."
        },
        "loci": {
            "title": "Targeted Loci",
            "description": "The specific chromosomal region(s) this prediction set was designed to target.",
            "comment": "Each locus is defined using 1-based, fully-closed (inclusive) coordinates for a specific version of the reference genome assembly.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "title": "Targeted Locus",
                "type": "object",
                "required": [
                    "assembly",
                    "chromosome",
                    "start",
                    "end"
                ],
                "additionalProperties": false,
                "properties": {
                    "assembly": {
                        "title": "Mapping assembly",
                        "description": "The genome assembly to which coordinates relate (e.g., GRCh38).",
                        "type": "string",
                        "enum": [
                            "GRCh38",
                            "hg19",
                            "GRCm39",
                            "mm10",
                            "mm9"
                        ]
                    },
                    "chromosome": {
                        "title": "Chromosome",
                        "description": "The number (or letter) designation for the chromosome, e.g. chr1 or chrX",
                        "type": "string",
                        "pattern": "^(chr[0-9A-Za-z_]+)$"
                    },
                    "start": {
                        "title": "Start",
                        "description": "The 1-based, closed (inclusive) starting coordinate.",
                        "type": "integer",
                        "minimum": 1
                    },
                    "end": {
                        "title": "End",
                        "description": "The 1-based, closed (inclusive) ending coordinate.",
                        "type": "integer",
                        "minimum": 1
                    }
                }
            },
            "submissionExample": {
                "appscript": "[{\"assembly\": \"GRCh38\", \"chromosome\": \"chr1\", \"start\": 100, \"end\": 200}]",
                "igvf_utils": "[{\"assembly\": \"GRCh38\", \"chromosome\": \"chr1\", \"start\": 100, \"end\": 200}]"
            },
            "permission": "import_items"
        }
    },
    "fuzzy_searchable_fields": [
        "@type",
        "collections",
        "file_set_type",
        "lab.title",
        "samples.summary",
        "samples.sample_terms.term_name",
        "samples.targeted_sample_term.term_name",
        "summary"
    ],
    "exact_searchable_fields": [
        "control_for.accession",
        "control_for.aliases",
        "dbxrefs",
        "files.accession",
        "files.aliases",
        "publication_identifiers",
        "samples.accession",
        "samples.aliases",
        "donors.accession",
        "donors.aliases",
        "submitted_by.title"
    ],
    "changelog": "/profiles/changelogs/prediction_set.md"
}
