{
    "title": "Tabular File",
    "$id": "/profiles/tabular_file.json",
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "description": "A file containing textual data with a tabular structure.",
    "required": [
        "award",
        "lab",
        "md5sum",
        "file_format",
        "file_set",
        "content_type",
        "controlled_access"
    ],
    "identifyingProperties": [
        "uuid",
        "accession",
        "alternate_accessions",
        "aliases",
        "md5sum"
    ],
    "additionalProperties": false,
    "mixinProperties": [
        {
            "$ref": "file.json#/properties"
        },
        {
            "$ref": "mixins.json#/basic_item"
        },
        {
            "$ref": "mixins.json#/accession"
        },
        {
            "$ref": "mixins.json#/attribution"
        },
        {
            "$ref": "mixins.json#/documents"
        },
        {
            "$ref": "mixins.json#/filtered"
        },
        {
            "$ref": "mixins.json#/transcriptome_annotation"
        },
        {
            "$ref": "mixins.json#/file_format_type"
        },
        {
            "$ref": "mixins.json#/release_timestamp"
        },
        {
            "$ref": "mixins.json#/assembly"
        },
        {
            "$ref": "mixins.json#/controlled_access"
        },
        {
            "$ref": "mixins.json#/cell_type_annotation"
        },
        {
            "$ref": "mixins.json#/preview_timestamp"
        },
        {
            "$ref": "mixins.json#/base_modifications"
        }
    ],
    "dependentSchemas": {
        "$merge": [
            "file.json#/dependentSchemas"
        ],
        "content_type": {
            "comment": "Content Type describes the content of the file.",
            "allOf": [
                {
                    "if": {
                        "properties": {
                            "file_format": {
                                "const": "tar"
                            }
                        },
                        "required": [
                            "file_format"
                        ]
                    },
                    "then": {
                        "properties": {
                            "content_type": {
                                "const": "sample sort parameters"
                            }
                        },
                        "required": [
                            "content_type"
                        ]
                    }
                },
                {
                    "if": {
                        "properties": {
                            "content_type": {
                                "not": {
                                    "const": "sample sort parameters"
                                }
                            }
                        },
                        "required": [
                            "content_type"
                        ]
                    },
                    "then": {
                        "properties": {
                            "file_format": {
                                "not": {
                                    "const": "tar"
                                }
                            }
                        }
                    }
                }
            ]
        },
        "file_format": {
            "comment": "Bed files must specify their file format type.",
            "allOf": [
                {
                    "$merge": "file.json#/dependentSchemas/file_format"
                },
                {
                    "oneOf": [
                        {
                            "required": [
                                "file_format_type"
                            ],
                            "properties": {
                                "file_format": {
                                    "enum": [
                                        "bed"
                                    ]
                                }
                            }
                        },
                        {
                            "not": {
                                "required": [
                                    "file_format_type"
                                ]
                            },
                            "properties": {
                                "file_format": {
                                    "enum": [
                                        "bedpe",
                                        "csv",
                                        "gtf",
                                        "tsv",
                                        "vcf"
                                    ]
                                }
                            }
                        }
                    ]
                }
            ]
        },
        "base_modifications": {
            "comment": "Only modification state files can specify base modifications.",
            "properties": {
                "content_type": {
                    "enum": [
                        "minus strand modification state",
                        "plus strand modification state"
                    ]
                }
            }
        }
    },
    "type": "object",
    "properties": {
        "schema_version": {
            "default": "16"
        },
        "catalog_adapters": {
            "title": "IGVF Catalog Adapters",
            "description": "IGVF Catalog Adapters that ingests this file",
            "type": "array",
            "permission": "admin_only",
            "uniqueItems": true,
            "items": {
                "title": "IGVF Catalog Adapter",
                "description": "Identifier pointing to a Github link of the IGVF Catalog adapter that processes this file.",
                "type": "string",
                "pattern": "https:\\/\\/github\\.com\\/IGVF-DACC\\/igvf-catalog\\/blob\\/dev\\/data\\/adapters\\/(.)*\\.py"
            },
            "submissionExample": {
                "appscript": "[\"https://github.com/IGVF-DACC/igvf-catalog/blob/dev/data/adapters/ccre_adapter.py\"]",
                "igvf_utils": "https://github.com/IGVF-DACC/igvf-catalog/blob/dev/data/adapters/ccre_adapter.py"
            }
        },
        "content_type": {
            "comment": "Content Type describes the content of the file.",
            "enum": [
                "barcode onlist",
                "barcode replacement",
                "barcode to element mapping",
                "barcode to hashtag mapping",
                "barcode to sample mapping",
                "barcode to variant mapping",
                "barcode to TF overexpression mapping",
                "bin paired count",
                "cell hashing barcodes",
                "coding variant effects",
                "differential chromatin contact quantifications",
                "differential element quantifications",
                "differential gene expression quantifications",
                "differential peak quantifications",
                "differential transcript expression quantifications",
                "DNA footprint scores",
                "editing templates",
                "element quantifications",
                "element to gene predictions",
                "elements reference",
                "external source data",
                "fold change over control",
                "fragments",
                "genes",
                "gene quantifications",
                "guide quantifications",
                "guide RNA sequences",
                "loci",
                "machine learning model features",
                "minus strand modification state",
                "MPRA sequence designs",
                "peaks",
                "peak quantifications",
                "plus strand modification state",
                "prime editing guide RNA sequences",
                "primer sequences",
                "primers table",
                "primers track",
                "protein to protein interaction score",
                "reporter elements",
                "reporter experiment",
                "reporter experiment barcode",
                "reporter variants",
                "reporter genomic element effects",
                "reporter genomic variant effects",
                "sample sort parameters",
                "target transcripts",
                "tissue positions",
                "transcript quantifications",
                "unfiltered global differential expression",
                "unfiltered local differential expression",
                "variants",
                "variant binding effects",
                "variant effects",
                "variant functional predictions",
                "variant localization impacts",
                "variant pathogenicity",
                "variant to element mapping"
            ],
            "enum_descriptions": {
                "barcode onlist": "A list of all known barcode sequences that have been included in the assay kit and are available during library preparation.",
                "barcode replacement": "A file containing original barcodes and the new barcodes used to replace the original barcodes. One common application is to use in preprocessing Parse SPLiT-seq data with the single cell uniform pipeline.",
                "barcode to element mapping": "A file describing the mapping of barcodes to genomic elements.",
                "barcode to hashtag mapping": "A file describing the mapping of barcodes to hashtags.",
                "barcode to sample mapping": "A file describing the mapping of barcodes to biological sample.",
                "barcode to variant mapping": "A file describing the mapping of barcodes to variants.",
                "barcode to TF overexpression mapping": "A file describing the mapping of barcodes to TF overexpression.",
                "bin paired count": "Occurrences of contact between chromatin pairs within designated binned intervals.",
                "cell hashing barcodes": "The barcodes used for cell hashing.",
                "coding variant effects": "A file predicting effects of amino acid changes at each position of a given protein.",
                "differential chromatin contact quantifications": "Details differences in chromatin interactions between experimental conditions.",
                "differential element quantifications": "A file that details the change in effect sizes for a specific non-coding element between two experimental conditions.",
                "differential gene expression quantifications": "The quantified changes in gene expression levels between different conditions or groups.",
                "differential peak quantifications": "The quantified changes in peaks detected between experimental conditions.",
                "differential transcript expression quantifications": "The quantified changes in expression levels of transcripts between conditions or groups.",
                "DNA footprint scores": "A file containing DNA footprint scores, which represents the binding sites between DNA and proteins called from assays like ATAC-seq data.",
                "editing templates": "The homology-directed DNA repair (HDR) templates containing SNVs in the library of saturation genome editing assays.",
                "element quantifications": "The quantified levels of specific genomic elements. Formatting should follow https://github.com/IGVF-DACC/checkfiles/blob/dev/src/schemas/table_schemas/element_quant.json.",
                "element to gene predictions": "A file summarizing the results of an E2G based prediction to identify the linkage between genomic elements and genes.",
                "elements reference": "References for the genomic elements studied, including details like genomic coordinates or identifiers.",
                "fold change over control": "The ratio of expression levels or other measurements in an experimental condition relative to a control.",
                "fragments": "The quantified levels of ATAC-seq fragments.",
                "genes": "A table listing genes.",
                "gene quantifications": "The quantified levels of genes.",
                "guide quantifications": "Information and sequencing read counts for each gRNA in a pooled CRISPR screen experiment.",
                "guide RNA sequences": "The sequences of guide RNAs designed for genome editing using CRISPR. Formatting should follow https://github.com/IGVF-DACC/checkfiles/blob/dev/src/schemas/table_schemas/guide_rna_sequences.json.",
                "loci": "A table listing genomic loci.",
                "external source data": "File containing a list of urls used as a source.",
                "machine learning model features": "The features used in a machine learning model.",
                "MPRA sequence designs": "Sequences designed for an MPRA experiment. Formatting should follow https://github.com/IGVF-DACC/checkfiles/blob/dev/src/schemas/table_schemas/mpra_sequence_designs.json.",
                "peaks": "Detected genomic regions of relative enrichment in coverage data, such as peaks in ChIP-seq or ATAC-seq indicating protein binding sites or chromatin accessibility.",
                "peak quantifications": "The quantified levels of peaks detected in ChIP-seq or ATAC-seq assays.",
                "prime editing guide RNA sequences": "The sequences of guide RNAs designed for prime editing CRISPR experiments. Formatting should follow https://github.com/IGVF-DACC/checkfiles/blob/dev/src/schemas/table_schemas/prime_editing_guide_rna_sequences.json.",
                "primer sequences": "The sequences of primers used in an experiment.",
                "primers table": "A tab-separated file containing all TAP-seq primers used to readout the expression of target genes.",
                "primers track": "A bed file used to display genomic positions of TAP-seq primer binding sites in a genome browser.",
                "protein to protein interaction score": "Scores or metrics for interactions between proteins.",
                "reporter elements": "Stores the raw format statistical activity analysis for elements associated with a reporter assay.",
                "reporter experiment": "Stores the complete raw measurements from a reporter assay.",
                "reporter experiment barcode": "Store the raw measurement on a barcode level from a reporter assay.",
                "reporter variants": "Stores the raw format statistical activity analysis for variants associated with a reporter assay.",
                "reporter genomic element effects": "Defines the activity of an element/region within a genome associated with a reporter assay.",
                "reporter genomic variant effects": "Defines the activity of a variant within a genome associated with a reporter assay.",
                "sample sort parameters": "The parameters/quantifications used for sorting biological samples, such as those in flow cytometry.",
                "target transcripts": "A GTF file containing annotations of targeted transcripts by the TAP-seq primer panel.",
                "tissue positions": "The spatial coordinates or positions of tissue samples or sections in experiments.",
                "transcript quantifications": "The quantified levels of transcripts.",
                "unfiltered global differential expression": "A file listing differentially expressed genes across the entire dataset, capturing all detected hits without filtering.",
                "unfiltered local differential expression": "A file listing differentially expressed genes within a defined genomic region surrounding a perturbation, capturing all detected hits without filtering.",
                "variants": "A table listing genetic variants.",
                "variant binding effects": "The genetic variant effects on transcription factor binding affinity.",
                "variant effects": "The genetic variant effects on gene expression.",
                "variant functional predictions": "Predictions of the functional effects of genetic variants.",
                "variant localization impacts": "Output of a variant painting experiement describing the measured impact of variants.",
                "variant pathogenicity": "A file containing variant pathogenicity scores.",
                "variant to element mapping": "A file describing the mapping of genetic variants to genomic elements."
            },
            "submissionExample": {
                "appscript": "guide RNA sequences",
                "igvf_utils": "guide RNA sequences"
            }
        },
        "file_format": {
            "enum": [
                "bed",
                "bedpe",
                "csv",
                "gtf",
                "tar",
                "tsv",
                "vcf"
            ],
            "submissionExample": {
                "appscript": "tsv",
                "igvf_utils": "tsv"
            }
        },
        "assembly": {
            "description": "Genome assembly applicable for the tabular data."
        },
        "dbxrefs": {
            "comment": "This file type currently does not support any external resource submission."
        }
    },
    "fuzzy_searchable_fields": [
        "aliases",
        "assay_titles",
        "cell_type_annotation.term_name",
        "content_type",
        "description",
        "file_format_specifications.description",
        "file_set.samples.summary",
        "file_set.summary",
        "integrated_in.applied_to_samples.summary",
        "lab.title",
        "submitted_by.title",
        "submitted_file_name",
        "summary",
        "workflow.name"
    ],
    "exact_searchable_fields": [
        "@type",
        "assembly",
        "dbxrefs",
        "file_format",
        "file_set.accession",
        "transcriptome_annotation"
    ],
    "changelog": "/profiles/changelogs/tabular_file.md"
}
