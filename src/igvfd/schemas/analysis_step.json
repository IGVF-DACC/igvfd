{
    "title": "Analysis Step",
    "description": "A step in a computational analysis workflow. For example, a sequence alignment step that represents the phase of the computational analysis in which sequenced reads are being aligned to the reference genome.",
    "$id": "/profiles/analysis_step.json",
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "type": "object",
    "required": [
        "title",
        "step_label",
        "analysis_step_types",
        "input_content_types",
        "output_content_types",
        "workflow"
    ],
    "identifyingProperties": [
        "uuid",
        "aliases",
        "name"
    ],
    "additionalProperties": false,
    "mixinProperties": [
        {
            "$ref": "mixins.json#/basic_item"
        },
        {
            "$ref": "mixins.json#/attribution"
        },
        {
            "$ref": "mixins.json#/standard_status"
        }
    ],
    "properties": {
        "schema_version": {
            "default": "1"
        },
        "analysis_step_types": {
            "title": "Analysis Step Types",
            "description": "The classification of the software.",
            "type": "array",
            "uniqueItems": true,
            "items": {
                "title": "Type",
                "type": "string",
                "enum": [
                    "alignment",
                    "file format conversion",
                    "signal generation"
                ]
            },
            "submissionExample": {
                "appscript": "[\"alignment\", \"file format conversion\"]",
                "igvf_utils": "alignment, file format conversion"
            }
        },
        "step_label": {
            "title": "Step Label",
            "description": "Unique lowercased label of the analysis step that includes the relevant assays, the software used, and the purpose of the step, e.g. rampage-grit-peak-calling-step",
            "comment": "Unique for each analysis_step in a given workflow.",
            "type": "string",
            "pattern": "^[a-z0-9-]+-step$",
            "submissionExample": {
                "appscript": "chip-seq-alignment-step",
                "igvf_utils": "chip-seq-alignment-step"
            }
        },
        "title": {
            "title": "Title",
            "description": "The preferred viewable name of the analysis step, likely the same as the step label.",
            "type": "string",
            "pattern": "^[a-zA-Z\\d_().,-]+(?:\\s[a-zA-Z\\d_().,-]+)*[step|Step]$",
            "submissionExample": {
                "appscript": "chip-seq-alignment-step or Chip-Seq-Alignment-Step",
                "igvf_utils": "chip-seq-alignment-step or Chip-Seq-Alignment-Step"
            }
        },
        "workflow": {
            "title": "Workflow",
            "description": "The computational workflow in which this analysis step belongs.",
            "type": "string",
            "linkTo": "Workflow",
            "submissionExample": {
                "appscript": "john-doe:workflow01 or IGVFWF6258ABCD",
                "igvf_utils": "john-doe:workflow01 or IGVFWF6258ABCD"
            }
        },
        "parents": {
            "title": "Parents",
            "description": "The precursor steps.",
            "uniqueItems": true,
            "type": "array",
            "items": {
                "title": "Parent",
                "description": "A precursor step.",
                "comment": "See analysis_step.json for available identifiers.",
                "type": "string",
                "linkTo": "AnalysisStep"
            },
            "submissionExample": {
                "appscript": "[\"john-doe:analysis_step01\", \"/analysis-steps/TSTWF62585875-chip-seq-alignment-example-step/\"]",
                "igvf_utils": "john-doe:analysis_step01 or /analysis-steps/TSTWF62585875-chip-seq-alignment-example-step/"
            }
        },
        "input_content_types": {
            "title": "Input Content Types",
            "description": "The content types used as input for the analysis step.",
            "type": "array",
            "uniqueItems": true,
            "items": {
                "title": "Input Content Type",
                "description": "A content type used as input for the analysis step.",
                "$merge": "#/$defs/content_types"
            },
            "submissionExample": {
                "appscript": "[\"reads\", \"alignments\"]",
                "igvf_utils": "reads, alignments"
            }
        },
        "output_content_types": {
            "title": "Output Content Types",
            "description": "The content types produced as output by the analysis step.",
            "type": "array",
            "uniqueItems": true,
            "items": {
                "title": "Output Content Type",
                "description": "A content type produced as output by the analysis step.",
                "$merge": "#/$defs/content_types"
            },
            "submissionExample": {
                "appscript": "[\"alignments\", \"transcriptome alignments\"]",
                "igvf_utils": "alignments, transcriptome alignments "
            }
        }
    },
    "$defs": {
        "content_types": {
            "type": "string",
            "anyOf": [
                {
                    "$merge": "alignment_file.json#/properties/content_type"
                },
                {
                    "$merge": "reference_file.json#/properties/content_type"
                },
                {
                    "$merge": "sequence_file.json#/properties/content_type"
                },
                {
                    "$merge": "signal_file.json#/properties/content_type"
                }
            ]
        }
    },
    "fuzzy_searchable_fields": [
        "title"
    ],
    "exact_searchable_fields": [
        "@type"
    ],
    "changelog": "/profiles/changelogs/analysis_step.md"
}
