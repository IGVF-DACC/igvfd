{
    "title": "Analysis Step",
    "description": "A step in a computational analysis workflow. For example, a sequence alignment step that represents the phase of the computational analysis in which sequenced reads are being aligned to the reference genome.",
    "$id": "/profiles/analysis_step.json",
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "type": "object",
    "required": [
        "lab",
        "award",
        "title",
        "step_label",
        "analysis_step_types",
        "input_content_types",
        "output_content_types",
        "workflow"
    ],
    "identifyingProperties": [
        "uuid",
        "aliases",
        "name"
    ],
    "additionalProperties": false,
    "mixinProperties": [
        {
            "$ref": "mixins.json#/basic_item"
        },
        {
            "$ref": "mixins.json#/attribution"
        },
        {
            "$ref": "mixins.json#/standard_status"
        },
        {
            "$ref": "mixins.json#/release_timestamp"
        },
        {
            "$ref": "mixins.json#/preview_timestamp"
        }
    ],
    "dependentSchemas": {
        "$merge": [
            "shared_dependencies.json#/standard_status"
        ]
    },
    "properties": {
        "schema_version": {
            "default": "7"
        },
        "analysis_step_types": {
            "title": "Analysis Step Types",
            "description": "The classification of the software.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
                "title": "Type",
                "type": "string",
                "enum": [
                    "alignment",
                    "barcode correction",
                    "barcode counting",
                    "barcode mapping generation",
                    "base calling",
                    "cell to feature barcode mapping",
                    "computational model prediction",
                    "computational model training",
                    "counts normalization",
                    "custom genome assembly",
                    "demultiplexing",
                    "differential expression analysis",
                    "fastq concatenation",
                    "file format conversion",
                    "filtering",
                    "fragment generation",
                    "genome index generation",
                    "interaction calling",
                    "matrix generation",
                    "merging",
                    "modification calling",
                    "modification site annotation",
                    "peak calling",
                    "read trimming",
                    "quantification",
                    "signal generation",
                    "signal normalization",
                    "spatial feature detection",
                    "transcriptome index generation",
                    "UMI deduplication",
                    "UMI quantification",
                    "variant annotation"
                ],
                "enum_descriptions": {
                    "alignment": "The aligning of reads to a reference genome or transcriptome.",
                    "barcode correction": "The process of correcting errors in barcode sequences.",
                    "barcode mapping generation": "The process of assigning barcode sequences to specific reads for identification and separation of samples.",
                    "barcode counting": "The process of quantifying the occurrence of unique barcodes in sequencing data.",
                    "base calling": "The conversion of raw sequencing signals into nucleotide sequences, determining the identity of each base in the reads.",
                    "cell to feature barcode mapping": "The assignment of feature barcodes (e.g., genes, proteins) to individual cell barcodes.",
                    "computational model prediction": "The application of a trained computational model to new data to generate predictions or inferences.",
                    "computational model training": "The process of creating or refining a computational model.",
                    "custom genome assembly": "The process of constructing a genome assembly.",
                    "counts normalization": "Adjusting raw read counts to account for biases in sequencing depth or composition.",
                    "demultiplexing": "The process of assigning sequencing reads to individual samples or cells using barcode identifiers or genetic demultiplexing based on natural genetic variation.",
                    "differential expression analysis": "The statistical comparison of gene expression levels between two or more conditions or cell populations.",
                    "fastq concatenation": "The process of combining fastqs files from multiple lanes.",
                    "file format conversion": "The conversion of data files from one file format to another.",
                    "filtering": "The removal of low-quality reads or sequences based on specified criteria.",
                    "fragment generation": "The process of generating fragments based on ATAC reads.",
                    "genome index generation": "The process of generating genome index file.",
                    "interaction calling": "Identifying and characterizing interactions between genomic elements.",
                    "matrix generation": "The process of generating matrix file.",
                    "merging": "Combining multiple datasets or files into a single dataset.",
                    "peak calling": "The identification of regions in the genome where there is a significant enrichment of reads.",
                    "read trimming": "The trimming of reads may include removing adapter sequences and trimming reads off low quality base pairs",
                    "quantification": "The measurement of gene expression or other features based on read counts.",
                    "signal generation": "The process of generating a continuous signal representation of aligned sequencing data.",
                    "signal normalization": "Adjusting the generated signal to remove systematic biases.",
                    "spatial feature detection": "The identification of spatially resolved features in genomic data, often used in spatial transcriptomics.",
                    "transcriptome index generation": "The process of generating transcriptome index file.",
                    "UMI deduplication": "The process of removing Unique Molecular Identifiers (UMI) duplicates.",
                    "UMI quantification": "The process of detection and measurement of Unique Molecular Identifiers (UMI).",
                    "variant annotation": "The process of providing additional information about genomic variants."
                }
            },
            "submissionExample": {
                "appscript": "[\"alignment\", \"file format conversion\"]",
                "igvf_utils": "alignment, file format conversion"
            }
        },
        "step_label": {
            "title": "Step Label",
            "description": "Unique lowercased label of the analysis step that includes the relevant assays, the software used, and the purpose of the step, e.g. rampage-grit-peak-calling-step",
            "comment": "Unique for each analysis_step in a given workflow.",
            "type": "string",
            "pattern": "^[a-z0-9-]+-step$",
            "submissionExample": {
                "appscript": "chip-seq-alignment-step",
                "igvf_utils": "chip-seq-alignment-step"
            }
        },
        "title": {
            "title": "Title",
            "description": "The preferred viewable name of the analysis step, likely the same as the step label.",
            "type": "string",
            "pattern": "^[a-zA-Z\\d_().,-]+(?:\\s[a-zA-Z\\d_().,-]+)*[step|Step]$",
            "submissionExample": {
                "appscript": "chip-seq-alignment-step or Chip-Seq-Alignment-Step",
                "igvf_utils": "chip-seq-alignment-step or Chip-Seq-Alignment-Step"
            }
        },
        "workflow": {
            "title": "Workflow",
            "description": "The computational workflow in which this analysis step belongs.",
            "type": "string",
            "linkTo": "Workflow",
            "submissionExample": {
                "appscript": "john-doe:workflow01 or IGVFWF6258ABCD",
                "igvf_utils": "john-doe:workflow01 or IGVFWF6258ABCD"
            }
        },
        "parents": {
            "title": "Parents",
            "description": "The precursor steps.",
            "uniqueItems": true,
            "minItems": 1,
            "type": "array",
            "items": {
                "title": "Parent",
                "description": "A precursor step.",
                "comment": "See analysis_step.json for available identifiers.",
                "type": "string",
                "linkTo": "AnalysisStep"
            },
            "submissionExample": {
                "appscript": "[\"john-doe:analysis_step01\", \"/analysis-steps/TSTWF62585875-chip-seq-alignment-example-step/\"]",
                "igvf_utils": "john-doe:analysis_step01, /analysis-steps/TSTWF62585875-chip-seq-alignment-example-step/"
            }
        },
        "input_content_types": {
            "title": "Input Content Types",
            "description": "The content types used as input for the analysis step.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
                "title": "Input Content Type",
                "description": "A content type used as input for the analysis step.",
                "$merge": "#/$defs/content_types"
            },
            "submissionExample": {
                "appscript": "[\"reads\", \"alignments\"]",
                "igvf_utils": "reads, alignments"
            }
        },
        "output_content_types": {
            "title": "Output Content Types",
            "description": "The content types produced as output by the analysis step.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
                "title": "Output Content Type",
                "description": "A content type produced as output by the analysis step.",
                "$merge": "#/$defs/content_types"
            },
            "submissionExample": {
                "appscript": "[\"alignments\", \"transcriptome alignments\"]",
                "igvf_utils": "alignments, transcriptome alignments"
            }
        }
    },
    "$defs": {
        "content_types": {
            "type": "string",
            "anyOf": [
                {
                    "$merge": "alignment_file.json#/properties/content_type"
                },
                {
                    "$merge": "configuration_file.json#/properties/content_type"
                },
                {
                    "$merge": "genome_browser_annotation_file.json#/properties/content_type"
                },
                {
                    "$merge": "image_file.json#/properties/content_type"
                },
                {
                    "$merge": "index_file.json#/properties/content_type"
                },
                {
                    "$merge": "matrix_file.json#/properties/content_type"
                },
                {
                    "$merge": "model_file.json#/properties/content_type"
                },
                {
                    "$merge": "reference_file.json#/properties/content_type"
                },
                {
                    "$merge": "sequence_file.json#/properties/content_type"
                },
                {
                    "$merge": "signal_file.json#/properties/content_type"
                },
                {
                    "$merge": "tabular_file.json#/properties/content_type"
                }
            ]
        }
    },
    "fuzzy_searchable_fields": [
        "aliases",
        "analysis_step_versions.software_versions.name",
        "description",
        "lab.title",
        "submitted_by.title",
        "title",
        "workflow.name"
    ],
    "exact_searchable_fields": [
        "@type",
        "workflow.accession"
    ],
    "changelog": "/profiles/changelogs/analysis_step.md"
}
