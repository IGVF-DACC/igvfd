{
    "title": "File",
    "$id": "/profiles/file.json",
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "description": "Abstract schema for submission of a file.",
    "type": "object",
    "required": [
        "award",
        "lab",
        "md5sum",
        "file_format",
        "content_type"
    ],
    "additionalProperties": false,
    "mixinProperties": [
        {
            "$ref": "mixins.json#/basic_item"
        },
        {
            "$ref": "mixins.json#/accession"
        },
        {
            "$ref": "mixins.json#/attribution"
        },
        {
            "$ref": "mixins.json#/documents"
        },
        {
            "$ref": "mixins.json#/release_timestamp"
        }
    ],
    "dependentSchemas": {
        "controlled_access": {
            "comment": "Controlled access files can become public (released/revoked/archived) only after upload to AnVIL (results in defined anvil_url).",
            "anyOf": [
                {
                    "required": [
                        "anvil_url"
                    ],
                    "properties": {
                        "controlled_access": {
                            "const": true
                        },
                        "status": {
                            "enum": [
                                "archived",
                                "released",
                                "revoked"
                            ]
                        }
                    }
                },
                {
                    "properties": {
                        "controlled_access": {
                            "const": false
                        }
                    }
                },
                {
                    "properties": {
                        "controlled_access": {
                            "const": true
                        },
                        "status": {
                            "enum": [
                                "in progress",
                                "deleted",
                                "replaced"
                            ]
                        }
                    }
                }
            ]
        },
        "derived_manually": {
            "comment": "Specification of derived_manually is mutually exclusive with specification of analysis_step_version.",
            "not": {
                "required": [
                    "analysis_step_version"
                ]
            }
        },
        "analysis_step_version": {
            "comment": "Specification of analysis_step_version is mutually exclusive with specification of derived_manually.",
            "not": {
                "required": [
                    "derived_manually"
                ]
            }
        },
        "validation_error_detail": {
            "comment": "Validation Error Detail can only be specified on files that did not pass validation.",
            "required": [
                "upload_status"
            ],
            "properties": {
                "upload_status": {
                    "enum": [
                        "invalidated",
                        "validation exempted"
                    ]
                }
            }
        },
        "upload_status": {
            "comment": "Validated files must have file_size.",
            "if": {
                "properties": {
                    "upload_status": {
                        "const": "validated"
                    }
                }
            },
            "then": {
                "required": [
                    "file_size"
                ]
            }
        },
        "status": {
            "comment": "Released, revoked, and archived files must not have upload_status pending or file not found. They are also required to have release_timestamp.",
            "if": {
                "properties": {
                    "status": {
                        "enum": [
                            "archived",
                            "released",
                            "revoked"
                        ]
                    }
                }
            },
            "then": {
                "not": {
                    "properties": {
                        "upload_status": {
                            "enum": [
                                "file not found",
                                "pending"
                            ]
                        }
                    }
                },
                "required": [
                    "release_timestamp"
                ]
            }
        },
        "release_timestamp": {
            "comment": "Release timestamp is required if status is released, revoked or archived.",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "enum": [
                        "revoked",
                        "archived",
                        "released"
                    ]
                }
            }
        },
        "file_format": {
            "comment": "Bam, bed, bedpe, bigBed, bigWig, bigInteract, tagAlign, and vcf files must have assembly. This dependency is not relevant for sequence files.",
            "if": {
                "properties": {
                    "file_format": {
                        "enum": [
                            "bam",
                            "bed",
                            "bedpe",
                            "bigBed",
                            "bigWig",
                            "bigInteract",
                            "vcf"
                        ]
                    }
                }
            },
            "then": {
                "required": [
                    "assembly"
                ]
            }
        },
        "transcriptome_annotation": {
            "comment": "The assembly shoud be consistent with annotation versions of respective species. Annotation version should not be submitted for custom assemblies.",
            "allOf": [
                {
                    "if": {
                        "properties": {
                            "assembly": {
                                "const": "GRCm39"
                            }
                        },
                        "required": [
                            "assembly"
                        ]
                    },
                    "then": {
                        "properties": {
                            "transcriptome_annotation": {
                                "enum": [
                                    "GENCODE M30",
                                    "GENCODE M31",
                                    "GENCODE M32",
                                    "GENCODE M33",
                                    "GENCODE M34",
                                    "GENCODE M36"
                                ]
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "assembly": {
                                "const": "Cast - GRCm39"
                            }
                        },
                        "required": [
                            "assembly"
                        ]
                    },
                    "then": {
                        "properties": {
                            "transcriptome_annotation": {
                                "enum": [
                                    "GENCODE Cast - M32"
                                ]
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "assembly": {
                                "const": "GRCh38"
                            }
                        },
                        "required": [
                            "assembly"
                        ]
                    },
                    "then": {
                        "properties": {
                            "transcriptome_annotation": {
                                "enum": [
                                    "GENCODE 32",
                                    "GENCODE 40",
                                    "GENCODE 41",
                                    "GENCODE 42",
                                    "GENCODE 43",
                                    "GENCODE 44",
                                    "GENCODE 45",
                                    "GENCODE 47"
                                ]
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "assembly": {
                                "const": "custom"
                            }
                        },
                        "required": [
                            "assembly"
                        ]
                    },
                    "then": {
                        "not": {
                            "required": [
                                "transcriptome_annotation"
                            ]
                        }
                    }
                }
            ]
        }
    },
    "properties": {
        "accession": {
            "accessionType": "FI"
        },
        "analysis_step_version": {
            "title": "Analysis Step Version",
            "description": "The analysis step version of the file.",
            "type": "string",
            "linkTo": "AnalysisStepVersion",
            "submissionExample": {
                "appscript": "john-doe:analysis_step_version_01 or /analysis-step-versions/dc73c5ff-32f2-41f2-95a7-b7f57b234f0d/",
                "igvf_utils": "john-doe:analysis_step_version_01 or /analysis-step-versions/dc73c5ff-32f2-41f2-95a7-b7f57b234f0d/"
            }
        },
        "content_md5sum": {
            "title": "Content MD5sum",
            "description": "The MD5sum of the uncompressed file.",
            "type": "string",
            "permission": "admin_only",
            "format": "hex",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}"
        },
        "content_type": {
            "title": "Content Type",
            "description": "The type of content in the file.",
            "comment": "This property is overwritten by the subclasses to define specific enum values.",
            "type": "string",
            "submissionExample": {
                "appscript": "alignments",
                "igvf_utils": "alignments"
            }
        },
        "dbxrefs": {
            "@type": "@id",
            "rdfs:subPropertyOf": "rdfs:seeAlso",
            "title": "External Resources",
            "description": "Identifiers from external resources that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
            "comment": "This property is overwritten by the subclasses to define specific enum values.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "title": "External Identifier",
                "description": "Identifier from an external resource that may have 1-to-1 or 1-to-many relationships with IGVF file objects.",
                "type": "string",
                "pattern": "(?!)"
            }
        },
        "derived_from": {
            "title": "Derived From",
            "description": "The files participating as inputs into software to produce this output file.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "title": "File Derived From",
                "comment": "See file.json for a list of available identifiers.",
                "type": "string",
                "linkTo": "File"
            },
            "submissionExample": {
                "appscript": "[\"IGVFFI1234ABCD\", \"john-doe:file01\"]",
                "igvf_utils": "IGVFFI1234ABCD, john-doe:file01"
            }
        },
        "derived_manually": {
            "title": "Derived Manually",
            "description": "A boolean indicating whether the file has been dervided manually without automated computational methods.",
            "type": "boolean",
            "submissionExample": {
                "appscript": "true",
                "igvf_utils": "true"
            }
        },
        "file_format": {
            "title": "File Format",
            "description": "The file format or extension of the file.",
            "comment": "This property is overwritten by the subclasses to define specific enum values.",
            "type": "string",
            "submissionExample": {
                "appscript": "bam",
                "igvf_utils": "bam"
            }
        },
        "file_format_specifications": {
            "title": "File Format Specifications Documents",
            "description": "Documents that describe the file format and fields of this file.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "title": "File Format Specifications Document",
                "comment": "See document.json for a list of available identifiers.",
                "type": "string",
                "linkTo": "Document"
            },
            "submissionExample": {
                "appscript": "[\"/documents/ed53a041-bd66-4afc-938d-d75eeede26da/\", \"john-doe:document01\"]",
                "igvf_utils": "/documents/ed53a041-bd66-4afc-938d-d75eeede26da/, john-doe:document01"
            }
        },
        "file_set": {
            "title": "File Set",
            "description": "The file set that this file belongs to.",
            "comment": "See file_set.json for a list of available identifiers.",
            "type": "string",
            "linkTo": "FileSet",
            "submissionExample": {
                "appscript": "john-doe:file_set01 or IGVFDS4321DCBA",
                "igvf_utils": "john-doe:file_set01 or IGVFDS4321DCBA"
            }
        },
        "file_size": {
            "title": "File Size",
            "description": "File size specified in bytes.",
            "comment": "Do not submit. This value is calculated by the checkfiles script upon submission.",
            "type": "integer",
            "minimum": 0
        },
        "md5sum": {
            "title": "MD5sum",
            "description": "The md5sum of the file being transferred.",
            "type": "string",
            "format": "hex",
            "maxLength": 32,
            "pattern": "[a-f\\d]{32}|[A-F\\d]{32}",
            "submissionExample": {
                "appscript": "74b87337454200d4d33f80c4663dc5e5",
                "igvf_utils": "74b87337454200d4d33f80c4663dc5e5"
            }
        },
        "submitted_file_name": {
            "title": "Submitted File Name",
            "description": "Original name of the file.",
            "type": "string",
            "submissionExample": {
                "appscript": "/path/to/file.fastq.gz",
                "igvf_utils": "/path/to/file.fastq.gz"
            }
        },
        "upload_status": {
            "title": "Upload Status",
            "description": "The upload/validation status of the file.",
            "type": "string",
            "default": "pending",
            "permission": "admin_only",
            "enum": [
                "pending",
                "file not found",
                "invalidated",
                "validated",
                "validation exempted"
            ]
        },
        "validation_error_detail": {
            "title": "Validation Error Detail",
            "description": "Explanation of why the file failed the automated content checks.",
            "type": "string",
            "permission": "admin_only"
        },
        "checkfiles_version": {
            "title": "Checkfiles Version",
            "description": "The Checkfiles GitHub version release the file was validated with.",
            "comment": "Do not submit. This value is calculated by the checkfiles script upon submission.",
            "type": "string",
            "permission": "admin_only"
        }
    },
    "changelog": "/profiles/changelogs/file.md"
}
